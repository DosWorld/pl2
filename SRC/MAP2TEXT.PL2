#
# MIT License
#
# Copyright (c) 2020 Viacheslav Komenda
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

$compile exe

$include "pl2.pl2"
$include "bdos.pl2"

$include "pl2const.pl2"

dim table

initialization

        table = FREE_MEMORY

        print("PL/2-86 Compiler MAP-file converter  (c) 2020 DosWorld  MIT License\n")
end

function is_visible_type(type)
        return (type = SYM_FN) or (type = SYM_SUB) or (type = SYM_GLOBAL) or (type = SYM_INIT) or (type = SYM_DONE)
end

sub main
        dim ptr, type, tname, show, ofs, name, in_fname

        if paramcount() <> 1 then
                print("\nUsage:\n\tPL2MAP file.map\n")
                halt(1)
        end

        in_fname = paramstr(1)
        ptr = bload(in_fname, table)
        if ptr = 0 then
                print("\nCould not load ")
                print(in_fname)
                println()
                halt(1)
        end
        ptr = table%[ptr - 2]
        print("\nADDR\tTYPE\t\NAME\n\n")
        while ptr <> -1
                ofs = table%[ptr + DICT_OFS]
                type =  table%[ptr + DICT_TYP]
                name = table + ptr + DICT_NAM
                if is_visible_type(type) then
                        if type = SYM_FN then
                                tname = "FUNC"
                        elseif type = SYM_SUB then
                                tname = "SUB"
                        elseif type = SYM_GLOBAL then
                                tname = "VAR"
                        elseif type = SYM_INIT then
                                tname = "INIT"
                        elseif type = SYM_DONE then
                                tname = "FINAL"
                        else
                                tname = "???"
                        end
                        printhw(ofs)
                        printc('\t')
                        print(tname)
                        printc('\t')
                        print(name)
                        println()
                end
                ptr = table%[ptr]
        end
end